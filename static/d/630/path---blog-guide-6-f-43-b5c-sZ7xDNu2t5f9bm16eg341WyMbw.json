{"data":{"markdownRemark":{"html":"<p><em>Phần 6</em></p>\n<h2>Ý tưởng để thay đổi theme.</h2>\n<p>Khi thay đổi theme, ta sẽ thay đổi className của <code>&#x3C;body></code>. Ứng với mỗi class sẽ có setting màu riêng dành cho page.</p>\n<p>Đầu tiên, thay đổi className của <code>&#x3C;body></code> như sau:</p>\n<pre><code>// context.js\nclass ThemeProvider extends React.Component {\n    switchTheme = () => {\n        const theme = this.state.theme === \"dark\" ? \"light\" : \"dark\"\n        localStorage.setItem(\"theme\", theme)\n        // Thêm dòng này\n        document.body.className = theme\n        this.setState({ theme })\n    }\n    componentDidMount() {\n        const theme = localStorage.getItem(\"theme\") || \"dark\"\n        this.setState({ theme })\n        // Thêm dòng này\n        document.body.className = theme\n    }\n</code></pre>\n<p>Bây giờ, nếu ta inspect element, ta sẽ thấy class của <code>&#x3C;body></code> thay đổi</p>\n<h2>CSS-Variable</h2>\n<p>Tạo một file <code>theme.css</code> ở <code>components</code> và cho <code>layout.js</code> import nó. Điền vào file này đoạn code dưới đây.</p>\n<pre><code>body.light {\n    --primary: hsl(  5, 74%, 59%);\n    --secondary: hsl(221, 87%, 60%);\n    --bg: hsl(230, 1%, 98%);\n    --textTitle: hsl(301, 63%, 40%);\n    --textNormal: hsl(230, 8%, 24%);\n    --header: hsl(230, 4%, 64%);\n    --textLinkHover: hsl(41, 99%, 30%);\n    --textLink: hsl(41, 99%, 38%);\n    --hr: hsl(198, 99%, 37%);\n}\n\nbody.dark {\n    -webkit-font-smoothing: antialiased;\n    --primary: hsl(355, 65%, 65%);\n    --secondary: hsl(207, 82%, 66%);\n    --bg: hsl(220, 13%, 18%);\n    --textTitle: hsl(286, 60%, 67%);\n    --textNormal: hsl(220, 14%, 71%);\n    --header: hsl(220,  10%, 40%);\n    --textLink: hsl( 39, 67%, 69%);\n    --textLinkHover: hsl( 29, 54%, 61%);\n    --hr: hsl(187, 47%, 55%);\n}\nh1 {\n    color: var(--textTitle)\n}\nh2, h3, h4, h5, h6 {\n    color: var(--header)\n}\nbody {\n    background: var(--bg)\n}\na {\n    color: var(--textLink)\n}\n\na:hover {\n    color: var(--textLinkHover)\n}\n\np, div, span {\n    color: var(--textNormal)\n}\nhr {\n    color: var(--hr)\n}\n* {\n    transition: color 0.5s ease-in-out, background-color 0.5s ease-in-out;\n}\n</code></pre>\n<p>Các mục có dạng <code>--*</code> gọi là CSS variables. Những mục này không có ảnh hưởng đến style, nhưng giá trị của nó có thể được sử dụng lại cho các mục khác bằng cách gọi <code>var(tên)</code> giống như trên.</p>\n<p>Bây giờ, bạn có thể bấm vào nút bấm hình bóng đèn và thấy theme của bạn được thay đổi giữa dark mode và light mode, như thế này:\n<img src=\"dark.png\" alt=\"dark\">\n<img src=\"light.png\" alt=\"light\"></p>\n<p>Okay, mình sẽ tìm cách để Gatsby load các bài blog trong bài viết sau.</p>","frontmatter":{"date":"2019-04-24T00:00:00.000Z","title":"Tôi đã làm page blog này như thế nào?"},"fields":{"slug":"/blog-guide-6/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}